services:
    paypal_web_checkout.routes.loader:
        class: %paypal_web_checkout.routes.loader.class%
        arguments:
            paypal_web_checkout.controller.route.name: %paypal_web_checkout.controller.route.name%
            paypal_web_checkout.controller.route: %paypal_web_checkout.controller.route%
            paypal_web_checkout.process.route.name: %paypal_web_checkout.process.route.name%
            paypal_web_checkout.process.route: %paypal_web_checkout.process.route%
        tags:
            - { name: routing.loader }

    paypal_web_checkout.manager:
        class: %paypal_web_checkout.manager.class%
        arguments:
            event_dispatcher: @payment.event.dispatcher
            payment_bridge: @payment.bridge
            form_wrapper: @paypal_web_checkout.wrapper
            url_factory: @paypal_web_checkout.url_factory

    paypal_web_checkout.wrapper:
        class: %paypal_web_checkout.wrapper.class%
        arguments:
            form.factory: @form.factory
            payment.bridge: @payment.bridge
            router: @router
            business: %paypal_web_checkout.business%
            url_factory: @paypal_web_checkout.url_factory

    paypal_web_checkout.url_factory:
        class: %paypal_web_checkout.url_factory.class%
        arguments:
            router: @router
            business: %paypal_web_checkout.business%
            paypal_url: %paypal_web_checkout.api_endpoint%
            paypal_sandbox_url: %paypal_web_checkout.sandbox_api_endpoint%
            paypal_notify_validate_query_param: { cmd: _notify-validate }
            return_route_name: %paypal_web_checkout.success.route.name%
            cancel_return_route_name: %paypal_web_checkout.cancel.route.name%
            process_route_name: %paypal_web_checkout.process.route.name%
            debug: %paypal_web_checkout.debug%
